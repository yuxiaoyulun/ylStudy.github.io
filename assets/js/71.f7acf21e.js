(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{499:function(t,e,a){"use strict";a.r(e);var s=a(65),i=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"管理修改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#管理修改"}},[t._v("#")]),t._v(" 管理修改")]),t._v(" "),a("p",[t._v("为什么说Git管理的是修改，而不是文件呢？我们还是做实验。第一步，对readme.txt做一个修改，比如加一行内容：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ cat readme.txt\nGit is a distributed version control system.\nGit is free software distributed under the GPL.\nGit has a mutable index called stage.\nGit tracks changes.\n")])])]),a("p",[t._v("然后，添加：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('$ git add readme.txt\n$ git status\n# On branch master\n# Changes to be committed:\n#   (use "git reset HEAD <file>..." to unstage)\n#\n#       modified:   readme.txt\n#\n')])])]),a("p",[t._v("然后，再修改readme.txt：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ cat readme.txt \nGit is a distributed version control system.\nGit is free software distributed under the GPL.\nGit has a mutable index called stage.\nGit tracks changes of files.\n")])])]),a("p",[t._v("提交：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('$ git commit -m "git tracks changes"\n[master 519219b] git tracks changes\n 1 file changed, 1 insertion(+)\n')])])]),a("p",[t._v("提交后，再看看状态：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('$ git status\nOn branch master\nChanges not staged for commit:\n  (use "git add <file>..." to update what will be committed)\n  (use "git checkout -- <file>..." to discard changes in working directory)\n\n\tmodified:   readme.txt\n\nno changes added to commit (use "git add" and/or "git commit -a")\n')])])]),a("p",[t._v("咦，怎么第二次的修改没有被提交？"),a("br"),t._v("\n别激动，我们回顾一下操作过程："),a("br"),t._v("\n第一次修改 -> "),a("code",[t._v("git add")]),t._v(" -> 第二次修改 -> "),a("code",[t._v("git commit")])]),t._v(" "),a("blockquote",[a("p",[t._v("你看，我们前面讲了，Git管理的是修改，当你用git add命令后，在工作区的第一次修改被放入暂存区，准备提交，但是，在工作区的第二次修改并没有放入暂存区，所以，git commit只负责把暂存区的修改提交了，也就是第一次的修改被提交了，第二次的修改不会被提交。")])]),t._v(" "),a("p",[t._v("提交后，用"),a("code",[t._v("git diff HEAD -- readme.txt")]),t._v("命令可以查看工作区和版本库里面最新版本的区别：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ git diff HEAD -- readme.txt \ndiff --git a/readme.txt b/readme.txt\nindex 76d770f..a9c5755 100644\n--- a/readme.txt\n+++ b/readme.txt\n@@ -1,4 +1,4 @@\n Git is a distributed version control system.\n Git is free software distributed under the GPL.\n Git has a mutable index called stage.\n-Git tracks changes.\n+Git tracks changes of files.\n")])])]),a("p",[t._v("可见，第二次修改确实没有被提交。")]),t._v(" "),a("p",[t._v("那怎么提交第二次修改呢？你可以继续git add再git commit，也可以别着急提交第一次修改，先git add第二次修改，再git commit，就相当于把两次修改合并后一块提交了：")]),t._v(" "),a("h3",{attrs:{id:"小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("p",[t._v("现在，你又理解了Git是如何跟踪修改的，每次修改，如果不用git add到暂存区，那就不会加入到commit中。")]),t._v(" "),a("p",[t._v("下一节"),a("RouterLink",{attrs:{to:"/pages/git/test7.html"}},[t._v("撤销修改")])],1)])}),[],!1,null,null,null);e.default=i.exports}}]);