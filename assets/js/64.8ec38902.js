(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{495:function(t,s,a){"use strict";a.r(s);var e=a(65),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"忽略特殊文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#忽略特殊文件"}},[t._v("#")]),t._v(" 忽略特殊文件")]),t._v(" "),a("p",[t._v("有些时候，你必须把某些文件放到Git工作目录中，但又不能提交它们，比如保存了数据库密码的配置文件啦，等等，每次git status都会显示"),a("code",[t._v("Untracked files ...")]),t._v("，有强迫症的童鞋心里肯定不爽。")]),t._v(" "),a("p",[t._v("好在Git考虑到了大家的感受，这个问题解决起来也很简单，在Git工作区的根目录下创建一个特殊的.gitignore文件，然后把要忽略的文件名填进去，Git就会自动忽略这些文件。")]),t._v(" "),a("p",[t._v("不需要从头写.gitignore文件，GitHub已经为我们准备了各种配置文件，只需要组合一下就可以使用了。所有配置文件可以直接在线浏览："),a("a",{attrs:{href:"https://github.com/github/gitignore",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/github/gitignore"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("忽略文件的原则是：")]),t._v(" "),a("ol",[a("li",[t._v("忽略操作系统自动生成的文件，比如缩略图等；")]),t._v(" "),a("li",[t._v("忽略编译生成的中间文件、可执行文件等，也就是如果一个文件是通过另一个文件自动生成的，那自动生成的文件就没必要放进版本库，比如Java编译产生的.class文件；")]),t._v(" "),a("li",[t._v("忽略你自己的带有敏感信息的配置文件，比如存放口令的配置文件。")])]),t._v(" "),a("p",[t._v("举个例子：")]),t._v(" "),a("p",[t._v("假设你在Windows下进行Python开发，Windows会自动在有图片的目录下生成隐藏的缩略图文件，如果有自定义目录，目录下就会有Desktop.ini文件，因此你需要忽略Windows自动生成的垃圾文件：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# Windows:\nThumbs.db\nehthumbs.db\nDesktop.ini\n")])])]),a("p",[t._v("然后，继续忽略Python编译产生的.pyc、.pyo、dist等文件或目录：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# Python:\n*.py[cod]\n*.so\n*.egg\n*.egg-info\ndist\nbuild\n")])])]),a("p",[t._v("加上你自己定义的文件，最终得到一个完整的.gitignore文件，内容如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# Windows:\nThumbs.db\nehthumbs.db\nDesktop.ini\n\n# Python:\n*.py[cod]\n*.so\n*.egg\n*.egg-info\ndist\nbuild\n\n# My configurations:\ndb.ini\ndeploy_key_rsa\n")])])]),a("p",[t._v("最后一步就是把.gitignore也提交到Git，就完成了！当然检验.gitignore的标准是git status命令是不是说working directory clean。")]),t._v(" "),a("p",[t._v("使用Windows的童鞋注意了，如果你在资源管理器里新建一个.gitignore文件，它会非常弱智地提示你必须输入文件名，但是在文本编辑器里“保存”或者“另存为”就可以把文件保存为.gitignore了。")]),t._v(" "),a("p",[t._v("有些时候，你想添加一个文件到Git，但发现添加不了，原因是这个文件被.gitignore忽略了：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ git add App.class\nThe following paths are ignored by one of your .gitignore files:\nApp.class\nUse -f if you really want to add them.\n")])])]),a("p",[t._v("如果你确实想添加该文件，可以用-f强制添加到Git：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ git add -f App.class\n")])])]),a("p",[t._v("或者你发现，可能是.gitignore写得有问题，需要找出来到底哪个规则写错了，可以用git check-ignore命令检查：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ git check-ignore -v App.class\n.gitignore:3:*.class\tApp.class\n")])])]),a("p",[t._v("Git会告诉我们，.gitignore的第3行规则忽略了该文件，于是我们就可以知道应该修订哪个规则。")]),t._v(" "),a("p",[t._v("还有些时候，当我们编写了规则排除了部分文件时：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# 排除所有.开头的隐藏文件:\n.*\n# 排除所有.class文件:\n*.class\n")])])]),a("p",[t._v("但是我们发现."),a("em",[t._v("这个规则把.gitignore也排除了，并且App.class需要被添加到版本库，但是被")]),t._v(".class规则排除了。")]),t._v(" "),a("p",[t._v("虽然可以用git add -f强制添加进去，但有强迫症的童鞋还是希望不要破坏.gitignore规则，这个时候，可以添加两条例外规则：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# 排除所有.开头的隐藏文件:\n.*\n# 排除所有.class文件:\n*.class\n\n# 不排除.gitignore和App.class:\n!.gitignore\n!App.class\n")])])]),a("p",[t._v("把指定文件排除在.gitignore规则外的写法就是!+文件名，所以，只需把例外文件添加进去即可。")]),t._v(" "),a("h3",{attrs:{id:"小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("ul",[a("li",[t._v("忽略某些文件时，需要编写.gitignore；")]),t._v(" "),a("li",[t._v(".gitignore文件本身要放到版本库里，并且可以对.gitignore做版本管理！")])]),t._v(" "),a("p",[t._v("下一节"),a("RouterLink",{attrs:{to:"/pages/git/test27.html"}},[t._v("配置别名")])],1)])}),[],!1,null,null,null);s.default=n.exports}}]);