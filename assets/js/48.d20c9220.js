(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{475:function(t,e,i){"use strict";i.r(e);var a=i(65),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h1",{attrs:{id:"添加远程库"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#添加远程库"}},[t._v("#")]),t._v(" 添加远程库")]),t._v(" "),i("p",[t._v("现在的情景是，你已经在本地创建了一个Git仓库后，又想在GitHub创建一个Git仓库，并且让这两个仓库进行远程同步，这样，GitHub上的仓库既可以作为备份，又可以让其他人通过该仓库来协作，真是一举多得。")]),t._v(" "),i("p",[t._v("首先，登陆GitHub，点击右上角"),i("kbd",[t._v("+")]),t._v("，选择"),i("code",[t._v("New repository")]),t._v("创建一个新的仓库：")]),t._v(" "),i("p",[t._v("在Repository name里填入你的仓库名"),i("code",[t._v("learngit")]),t._v(",其他保持默认设置，点击“Create repository”按钮，就成功地创建了一个新的Git仓库：")]),t._v(" "),i("p",[t._v("目前，在GitHub上的这个learngit仓库还是空的，GitHub告诉我们，可以从这个仓库克隆出新的仓库，也可以把一个已有的本地仓库与之关联，然后，把本地仓库的内容推送到GitHub仓库。")]),t._v(" "),i("p",[t._v("现在，我们根据GitHub的提示，在本地的learngit仓库下运行命令：")]),t._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("$ git remote add origin git@github.com:michaelliao/learngit.git\n")])])]),i("p",[t._v("请千万注意，把上面的michaelliao替换成你自己的GitHub账户名，否则，你在本地关联的就是我的远程库。")]),t._v(" "),i("p",[t._v("添加后，远程库的名字就是origin，这是Git默认的叫法，也可以改成别的，但是origin这个名字一看就知道是远程库。")]),t._v(" "),i("p",[t._v("下一步，就可以把本地库的所有内容推送到远程库上：")]),t._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("$ git push -u origin master\nCounting objects: 20, done.\nDelta compression using up to 4 threads.\nCompressing objects: 100% (15/15), done.\nWriting objects: 100% (20/20), 1.64 KiB | 560.00 KiB/s, done.\nTotal 20 (delta 5), reused 0 (delta 0)\nremote: Resolving deltas: 100% (5/5), done.\nTo github.com:michaelliao/learngit.git\n * [new branch]      master -> master\nBranch 'master' set up to track remote branch 'master' from 'origin'.\n")])])]),i("p",[t._v("把本地库的内容推送到远程，用git push命令，实际上是把当前分支master推送到远程。")]),t._v(" "),i("p",[t._v("由于远程库是空的，我们第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。")]),t._v(" "),i("p",[t._v("推送成功后，可以立刻在GitHub页面中看到远程库的内容已经和本地一模一样：")]),t._v(" "),i("p",[t._v("从现在起，只要本地作了提交，就可以通过命令："),i("code",[t._v("$ git push origin master")]),i("br"),t._v("\n把本地master分支的最新修改推送至GitHub，现在，你就拥有了真正的分布式版本库！")]),t._v(" "),i("h3",{attrs:{id:"ssh警告"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#ssh警告"}},[t._v("#")]),t._v(" SSH警告")]),t._v(" "),i("p",[t._v("当你第一次使用Git的clone或者push命令连接GitHub时，会得到一个警告：")]),t._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("The authenticity of host 'github.com (xx.xx.xx.xx)' can't be established.\nRSA key fingerprint is xx.xx.xx.xx.xx.\nAre you sure you want to continue connecting (yes/no)?\n")])])]),i("p",[t._v("这是因为Git使用SSH连接，而SSH连接在第一次验证GitHub服务器的Key时，需要你确认GitHub的Key的指纹信息是否真的来自GitHub的服务器，输入yes回车即可。"),i("br"),t._v("\nGit会输出一个警告，告诉你已经把GitHub的Key添加到本机的一个信任列表里了："),i("br"),t._v(" "),i("code",[t._v("Warning: Permanently added 'github.com' (RSA) to the list of known hosts.")]),i("br"),t._v("\n这个警告只会出现一次，后面的操作就不会有任何警告了。")]),t._v(" "),i("h3",{attrs:{id:"删除远程库"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#删除远程库"}},[t._v("#")]),t._v(" 删除远程库")]),t._v(" "),i("p",[t._v("如果添加的时候地址写错了，或者就是想删除远程库，可以用"),i("code",[t._v("git remote rm <name>")]),t._v("命令。使用前，建议先用git remote -v查看远程库信息：")]),t._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("$ git remote -v\norigin  git@github.com:michaelliao/learn-git.git (fetch)\norigin  git@github.com:michaelliao/learn-git.git (push)\n")])])]),i("p",[t._v("然后，根据名字删除，比如删除origin：")]),t._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("$ git remote rm origin\n")])])]),i("p",[t._v("此处的“删除”其实是解除了本地和远程的绑定关系，并不是物理上删除了远程库。远程库本身并没有任何改动。要真正删除远程库，需要登录到GitHub，在后台页面找到删除按钮再删除。")]),t._v(" "),i("h3",{attrs:{id:"小结"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),i("ul",[i("li",[t._v("要关联一个远程库，使用命令git remote add origin git@server-name:path/repo-name.git；")]),t._v(" "),i("li",[t._v("关联一个远程库时必须给远程库指定一个名字，origin是默认习惯命名；")]),t._v(" "),i("li",[t._v("关联后，使用命令git push -u origin master第一次推送master分支的所有内容；")]),t._v(" "),i("li",[t._v("此后，每次本地提交后，只要有必要，就可以使用命令git push origin master推送最新修改；")])]),t._v(" "),i("p",[t._v("下一节"),i("RouterLink",{attrs:{to:"/pages/git/test11.html"}},[t._v("从远程库克隆")])],1)])}),[],!1,null,null,null);e.default=s.exports}}]);