(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{498:function(e,a,t){"use strict";t.r(a);var i=t(65),s=Object(i.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"版本回退"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#版本回退"}},[e._v("#")]),e._v(" 版本回退")]),e._v(" "),t("p",[e._v("现在，你已经学会了修改文件，然后把修改提交到Git版本库，现在，再练习一次，修改readme.txt文件如下：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Git is a distributed version control system.\nGit is free software distributed under the GPL.\n")])])]),t("p",[e._v("然后尝试提交：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('$ git add readme.txt\n$ git commit -m "append GPL"\n[master 1094adb] append GPL\n 1 file changed, 1 insertion(+), 1 deletion(-)\n')])])]),t("p",[e._v("每当你觉得文件修改到一定程度的时候，就可以“保存一个快照”，这个快照在Git中被称为commit。一旦你把文件改乱了，或者误删了文件，还可以从最近的一个commit恢复，然后继续工作，而不是把几个月的工作成果全部丢失。")]),e._v(" "),t("p",[e._v("我们回顾一下readme.txt文件一共有几个版本被提交到Git仓库里了：")]),e._v(" "),t("ul",[t("li",[e._v("版本1：wrote a readme file")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Git is a version control system.\nGit is free software.\n")])])]),t("ul",[t("li",[e._v("版本2：add distributed")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Git is a distributed version control system.\nGit is free software.\n")])])]),t("ul",[t("li",[e._v("版本3：append GPL")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Git is a distributed version control system.\nGit is free software distributed under the GPL.\n")])])]),t("p",[e._v("当然了，在实际工作中，我们脑子里怎么可能记得一个几千行的文件每次都改了什么内容，不然要版本控制系统干什么。版本控制系统肯定有某个命令可以告诉我们历史记录，在Git中，我们用git log命令查看：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ git log\ncommit 1094adb7b9b3807259d8cb349e7df1d4d6477073 (HEAD -> master)\nAuthor: Michael Liao <askxuefeng@gmail.com>\nDate:   Fri May 18 21:06:15 2018 +0800\n\n    append GPL\n\ncommit e475afc93c209a690c39c13a46716e8fa000c366\nAuthor: Michael Liao <askxuefeng@gmail.com>\nDate:   Fri May 18 21:03:36 2018 +0800\n\n    add distributed\n\ncommit eaadf4e385e865d25c48e7ca9c8395c3f7dfaef0\nAuthor: Michael Liao <askxuefeng@gmail.com>\nDate:   Fri May 18 20:59:18 2018 +0800\n\n    wrote a readme file\n")])])]),t("p",[e._v("git log命令显示从最近到最远的提交日志，我们可以看到3次提交，最近的一次是append GPL，上一次是add distributed，最早的一次是wrote a readme file。"),t("br"),e._v("\n如果嫌输出信息太多，看得眼花缭乱的，可以试试加上--pretty=oneline参数：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ git log --pretty=oneline\n1094adb7b9b3807259d8cb349e7df1d4d6477073 (HEAD -> master) append GPL\ne475afc93c209a690c39c13a46716e8fa000c366 add distributed\neaadf4e385e865d25c48e7ca9c8395c3f7dfaef0 wrote a readme file\n")])])]),t("p",[e._v("现在我们启动时光穿梭机，准备把readme.txt回退到上一个版本，也就是add distributed的那个版本。")]),e._v(" "),t("ul",[t("li",[e._v("首先，Git必须知道当前版本是哪个版本，在Git中，用"),t("kbd",[e._v("HEAD")]),e._v("表示当前版本，上一个版本就是"),t("kbd",[e._v("HEAD^")]),e._v("，上上一个版本就是"),t("kbd",[e._v("HEAD^^")]),e._v("，当然往上100个版本写100个^比较容易数不过来，所以写成"),t("kbd",[e._v("HEAD~100")]),e._v("。")])]),e._v(" "),t("p",[e._v("现在，我们要把当前版本append GPL回退到上一个版本add distributed，就可以使用git reset命令：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ git reset --hard HEAD^\nHEAD is now at e475afc add distributed\n")])])]),t("p",[e._v("还可以继续回退到上一个版本wrote a readme file，不过且慢，让我们用git log再看看现在版本库的状态：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ git log\ncommit e475afc93c209a690c39c13a46716e8fa000c366 (HEAD -> master)\nAuthor: Michael Liao <askxuefeng@gmail.com>\nDate:   Fri May 18 21:03:36 2018 +0800\n\n    add distributed\n\ncommit eaadf4e385e865d25c48e7ca9c8395c3f7dfaef0\nAuthor: Michael Liao <askxuefeng@gmail.com>\nDate:   Fri May 18 20:59:18 2018 +0800\n\n    wrote a readme file\n")])])]),t("p",[e._v("最新的那个版本append GPL已经看不到了！好比你从21世纪坐时光穿梭机来到了19世纪，想再回去已经回不去了，肿么办？"),t("br"),e._v("\n办法其实还是有的，只要上面的命令行窗口还没有被关掉，你就可以顺着往上找啊找啊，找到那个append GPL的commit id是1094adb...，于是就可以指定回到未来的某个版本：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ git reset --hard 1094a\nHEAD is now at 83b0afe append GPL\n")])])]),t("p",[e._v("现在，你回退到了某个版本，关掉了电脑，第二天早上就后悔了，想恢复到新版本怎么办？找不到新版本的commit id怎么办？")]),e._v(" "),t("p",[e._v("在Git中，总是有后悔药可以吃的。当你用$ git reset --hard HEAD^回退到add distributed版本时，再想恢复到append GPL，就必须找到append GPL的commit id。Git提供了一个命令git reflog用来记录你的每一次命令：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ git reflog\ne475afc HEAD@{1}: reset: moving to HEAD^\n1094adb (HEAD -> master) HEAD@{2}: commit: append GPL\ne475afc HEAD@{3}: commit: add distributed\neaadf4e HEAD@{4}: commit (initial): wrote a readme file\n")])])]),t("h3",{attrs:{id:"小结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[e._v("#")]),e._v(" 小结")]),e._v(" "),t("ul",[t("li",[t("kbd",[e._v("HEAD")]),e._v("指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令"),t("code",[e._v("git reset --hard commit_id")])]),e._v(" "),t("li",[e._v("穿梭前，用"),t("code",[e._v("git log")]),e._v("可以查看提交历史，以便确定要回退到哪个版本。")]),e._v(" "),t("li",[e._v("要重返未来，用"),t("code",[e._v("git reflog")]),e._v("查看命令历史，以便确定要回到未来的哪个版本。")])]),e._v(" "),t("p",[e._v("下一节"),t("RouterLink",{attrs:{to:"/pages/git/test5.html"}},[e._v("工作区和暂存区")])],1)])}),[],!1,null,null,null);a.default=s.exports}}]);