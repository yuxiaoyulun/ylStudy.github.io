(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{503:function(t,s,e){"use strict";e.r(s);var a=e(65),i=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"远程仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#远程仓库"}},[t._v("#")]),t._v(" 远程仓库")]),t._v(" "),e("p",[t._v("找一台电脑充当服务器的角色，每天24小时开机，其他每个人都从这个“服务器”仓库克隆一份到自己的电脑上，并且各自把各自的提交推送到服务器仓库里，也从服务器仓库中拉取别人的提交。")]),t._v(" "),e("p",[t._v("完全可以自己搭建一台运行Git的服务器，不过现阶段，为了学Git先搭个服务器绝对是小题大作。好在这个世界上有个叫GitHub的神奇的网站，从名字就可以看出，这个网站就是提供Git仓库托管服务的，所以，只要注册一个GitHub账号，就可以免费获得Git远程仓库。")]),t._v(" "),e("p",[t._v("由于本地Git仓库和GitHub仓库之间的传输是通过SSH加密的，所以，需要一点设置：")]),t._v(" "),e("ul",[e("li",[t._v("第1步：创建SSH Key。在用户主目录下，看看有没有.ssh目录，如果有，再看看这个目录下有没有id_rsa和id_rsa.pub这两个文件，如果已经有了，可直接跳到下一步。如果没有，打开Shell（Windows下打开Git Bash），创建SSH Key：")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('$ ssh-keygen -t rsa -C "youremail@example.com"\n')])])]),e("p",[t._v("你需要把邮件地址换成你自己的邮件地址，然后一路回车，使用默认值即可，由于这个Key也不是用于军事目的，所以也无需设置密码。")]),t._v(" "),e("p",[t._v("如果一切顺利的话，可以在用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件，这两个就是SSH Key的秘钥对，id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人。")]),t._v(" "),e("ul",[e("li",[t._v("第2步：登陆GitHub，打开“settings”，“SSH and GPG Keys”页面：然后填上title，在key里填入id_rsa.pub里的内容。点add ssh key")])]),t._v(" "),e("p",[t._v("为什么GitHub需要SSH Key呢？因为GitHub需要识别出你推送的提交确实是你推送的，而不是别人冒充的，而Git支持SSH协议，所以，GitHub只要知道了你的公钥，就可以确认只有你自己才能推送。")]),t._v(" "),e("p",[t._v("当然，GitHub允许你添加多个Key。假定你有若干电脑，你一会儿在公司提交，一会儿在家里提交，只要把每台电脑的Key都添加到GitHub，就可以在每台电脑上往GitHub推送了。")]),t._v(" "),e("h3",{attrs:{id:"小结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),e("p",[t._v("“有了远程仓库，妈妈再也不用担心我的硬盘了。”——Git点读机")]),t._v(" "),e("p",[t._v("下一节"),e("RouterLink",{attrs:{to:"/pages/git/test10.html"}},[t._v("添加远程仓库")])],1)])}),[],!1,null,null,null);s.default=i.exports}}]);