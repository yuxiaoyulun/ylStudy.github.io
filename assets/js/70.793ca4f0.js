(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{500:function(t,e,a){"use strict";a.r(e);var s=a(65),i=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"工作区和暂存区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工作区和暂存区"}},[t._v("#")]),t._v(" 工作区和暂存区")]),t._v(" "),a("p",[a("strong",[t._v("工作区（Working Directory）")]),a("br"),t._v("\n就是你在电脑里能看到的目录，比如我的learngit文件夹就是一个工作区："),a("br"),t._v(" "),a("strong",[t._v("版本库（Repository）")]),a("br"),t._v("\n工作区有一个隐藏目录.git，这个不算工作区，而是Git的版本库。")]),t._v(" "),a("blockquote",[a("p",[t._v("Git的版本库里存了很多东西，其中最重要的就是称为stage（或者叫index）的暂存区，还有Git为我们自动创建的第一个分支master，以及指向master的一个指针叫HEAD。")])]),t._v(" "),a("p",[t._v("前面讲了我们把文件往Git版本库里添加的时候，是分两步执行的：")]),t._v(" "),a("blockquote",[a("ul",[a("li",[t._v("第一步是用git add把文件添加进去，实际上就是把文件修改添加到暂存区；")]),t._v(" "),a("li",[t._v("第二步是用git commit提交更改，实际上就是把暂存区的所有内容提交到当前分支。")])]),t._v(" "),a("p",[t._v("因为我们创建Git版本库时，Git自动为我们创建了唯一一个master分支，所以，现在，git commit就是往master分支上提交更改。"),a("br"),t._v("\n可以简单理解为，需要提交的文件修改通通放到暂存区，然后，一次性提交暂存区的所有修改。")])]),t._v(" "),a("p",[t._v("现在，我们再练习一遍，先对readme.txt做个修改，比如加上一行内容：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Git is a distributed version control system.\nGit is free software distributed under the GPL.\nGit has a mutable index called stage.\n")])])]),a("p",[t._v("然后，在工作区新增一个LICENSE文本文件（内容随便写）。"),a("br"),t._v("\n先用git status查看一下状态：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('$ git status\nOn branch master\nChanges not staged for commit:\n  (use "git add <file>..." to update what will be committed)\n  (use "git checkout -- <file>..." to discard changes in working directory)\n\n\tmodified:   readme.txt\n\nUntracked files:\n  (use "git add <file>..." to include in what will be committed)\n\n\tLICENSE\n\nno changes added to commit (use "git add" and/or "git commit -a")\n')])])]),a("p",[t._v("Git非常清楚地告诉我们，readme.txt被修改了，而LICENSE还从来没有被添加过，所以它的状态是Untracked。"),a("br"),t._v("\n现在，使用两次命令git add，把readme.txt和LICENSE都添加后，用git status再查看一下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('$ git status\nOn branch master\nChanges to be committed:\n  (use "git reset HEAD <file>..." to unstage)\n\n\tnew file:   LICENSE\n\tmodified:   readme.txt\n')])])]),a("p",[t._v("所以，git add命令实际上就是把要提交的所有修改放到暂存区（Stage），然后，执行git commit就可以一次性把暂存区的所有修改提交到分支。")]),t._v(" "),a("h3",{attrs:{id:"小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("p",[t._v("暂存区是Git非常重要的概念，弄明白了暂存区，就弄明白了Git的很多操作到底干了什么。")]),t._v(" "),a("p",[t._v("下一节"),a("RouterLink",{attrs:{to:"/pages/git/test6.html"}},[t._v("管理修改")])],1)])}),[],!1,null,null,null);e.default=i.exports}}]);