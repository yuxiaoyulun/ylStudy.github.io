(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{497:function(e,t,r){"use strict";r.r(t);var a=r(65),v=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"使用sourcetree"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#使用sourcetree"}},[e._v("#")]),e._v(" 使用SourceTree")]),e._v(" "),r("p",[e._v("当我们对Git的提交、分支已经非常熟悉，可以熟练使用命令操作Git后，再使用GUI工具，就可以更高效。")]),e._v(" "),r("p",[e._v("Git有很多图形界面工具，这里我们推荐SourceTree，它是由Atlassian开发的免费Git图形界面工具，可以操作任何Git库。")]),e._v(" "),r("p",[e._v("首先从官网下载SourceTree并安装，然后直接运行SourceTree。")]),e._v(" "),r("p",[e._v("第一次运行SourceTree时，SourceTree并不知道我们的Git库在哪。如果本地已经有了Git库，直接从资源管理器把文件夹拖拽到SourceTree上，就添加了一个本地Git库：")]),e._v(" "),r("p",[e._v("也可以选择“New”-“Clone from URL”直接从远程克隆到本地。")]),e._v(" "),r("h2",{attrs:{id:"提交"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#提交"}},[e._v("#")]),e._v(" 提交")]),e._v(" "),r("p",[e._v("我们双击learngit这个本地库，SourceTree会打开另一个窗口，展示这个Git库的当前所有分支以及文件状态。选择左侧面板的“WORKSPACE”-“File status”，右侧会列出当前已修改的文件（Unstaged files）：")]),e._v(" "),r("p",[e._v("选中某个文件，该文件就自动添加到“Staged files”，实际上是执行了git add README.md命令：")]),e._v(" "),r("p",[e._v("然后，我们在下方输入Commit描述，点击“Commit”，就完成了一个本地提交：")]),e._v(" "),r("p",[e._v("实际上是执行了"),r("code",[e._v('git commit -m "update README.md"')]),e._v("命令。")]),e._v(" "),r("p",[e._v("使用SourceTree进行提交就是这么简单，它的优势在于可以可视化地观察文件的修改，并以红色和绿色高亮显示。")]),e._v(" "),r("h2",{attrs:{id:"分支"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#分支"}},[e._v("#")]),e._v(" 分支")]),e._v(" "),r("p",[e._v("在左侧面板的“BRANCHES”下，列出了当前本地库的所有分支。当前分支会加粗并用○标记。要切换分支，我们只需要选择该分支，例如master，然后点击右键，在弹出菜单中选择“Checkout master”，实际上是执行命令git checkout master：")]),e._v(" "),r("p",[e._v("要合并分支，同样选择待合并分支，例如dev，然后点击右键，在弹出菜单中选择“Merge dev into master”，实际上是执行命令git merge dev：")]),e._v(" "),r("h2",{attrs:{id:"推送"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#推送"}},[e._v("#")]),e._v(" 推送")]),e._v(" "),r("p",[e._v("在SourceTree的工具栏上，分别有Pull和Push，分别对应命令git pull和git push，只需注意本地和远程分支的名称要对应起来，使用时十分简单。")]),e._v(" "),r("p",[e._v("注意到使用SourceTree时，我们只是省下了敲命令的麻烦，SourceTree本身还是通过Git命令来执行任何操作。如果操作失败，SourceTree会自动显示执行的Git命令以及错误信息，我们可以通过Git返回的错误信息知道出错的原因：")]),e._v(" "),r("h3",{attrs:{id:"小结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[e._v("#")]),e._v(" 小结")]),e._v(" "),r("ul",[r("li",[e._v("使用SourceTree可以以图形界面操作Git，省去了敲命令的过程，对于常用的提交、分支、推送等操作来说非常方便。")]),e._v(" "),r("li",[e._v("SourceTree使用Git命令执行操作，出错时，仍然需要阅读Git命令返回的错误信息。")])]),e._v(" "),r("p",[r("strong",[e._v("- end完结 -")])])])}),[],!1,null,null,null);t.default=v.exports}}]);