(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{487:function(a,t,e){"use strict";e.r(t);var s=e(65),n=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"创建标签"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建标签"}},[a._v("#")]),a._v(" 创建标签")]),a._v(" "),e("p",[a._v("在Git中打标签非常简单，首先，切换到需要打标签的分支上：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("$git branch\n* dev\n  master\n$ git checkout master\nSwitched to branch 'master'\n")])])]),e("p",[a._v("然后，敲命令"),e("code",[a._v("git tag <name>")]),a._v("就可以打一个新标签：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("$ git tag v1.0\n")])])]),e("p",[a._v("可以用命令git tag查看所有标签：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("$ git tag\nv1.0\n")])])]),e("p",[a._v("默认标签是打在最新提交的commit上的。有时候，如果忘了打标签，比如，现在已经是周五了，但应该在周一打的标签没有打，怎么办？")]),a._v(" "),e("p",[a._v("方法是找到历史提交的commit id，然后打上就可以了：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("$ git log --pretty=oneline --abbrev-commit\n12a631b (HEAD -> master, tag: v1.0, origin/master) merged bug fix 101\n4c805e2 fix bug 101\ne1e9c68 merge with no-ff\nf52c633 add merge\ncf810e4 conflict fixed\n5dc6824 & simple\n14096d0 AND simple\nb17d20e branch test\nd46f35e remove test.txt\nb84166e add test.txt\n519219b git tracks changes\ne43a48b understand how stage works\n1094adb append GPL\ne475afc add distributed\neaadf4e wrote a readme file\n")])])]),e("p",[a._v("比方说要对add merge这次提交打标签，它对应的commit id是f52c633，敲入命令：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("$ git tag v0.9 f52c633\n")])])]),e("p",[a._v("再用命令git tag查看标签：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("$ git tag\nv0.9\nv1.0\n")])])]),e("p",[a._v("注意，标签不是按时间顺序列出，而是按字母排序的。可以用"),e("code",[a._v("git show <tagname>")]),a._v("查看标签信息：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("$ git show v0.9\ncommit f52c63349bc3c1593499807e5c8e972b82c8f286 (tag: v0.9)\nAuthor: Michael Liao <askxuefeng@gmail.com>\nDate:   Fri May 18 21:56:54 2018 +0800\n\n    add merge\n\ndiff --git a/readme.txt b/readme.txt\n")])])]),e("p",[a._v("还可以创建带有说明的标签，用-a指定标签名，-m指定说明文字：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('$git tag -a v1.0 -m "version 1.0 released" 1094adb\n')])])]),e("p",[a._v("用命令"),e("code",[a._v("git show <tagname>")]),a._v("可以看到说明文字：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("$ git show v1.0\ntag v0.1\nTagger: Michael Liao <askxuefeng@gmail.com>\nDate:   Fri May 18 22:48:43 2018 +0800\n\nversion 0.1 released\n\ncommit 1094adb7b9b3807259d8cb349e7df1d4d6477073 (tag: v0.1)\nAuthor: Michael Liao <askxuefeng@gmail.com>\nDate:   Fri May 18 21:06:15 2018 +0800\n\n    append GPL\n\ndiff --git a/readme.txt b/readme.txt\n...\n")])])]),e("p",[e("strong",[a._v("注意：标签总是和某个commit挂钩。如果这个commit既出现在master分支，又出现在dev分支，那么在这两个分支上都可以看到这个标签。")])]),a._v(" "),e("h3",{attrs:{id:"小结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[a._v("#")]),a._v(" 小结")]),a._v(" "),e("ul",[e("li",[a._v("命令"),e("code",[a._v("git tag <tagname>")]),a._v("用于新建一个标签，默认为HEAD，也可以指定一个commit id；")]),a._v(" "),e("li",[a._v("命令"),e("code",[a._v('git tag -a <tagname> -m "blablabla..."')]),a._v("可以指定标签信息；")]),a._v(" "),e("li",[a._v("命令"),e("code",[a._v("git tag")]),a._v("可以查看所有标签。")])]),a._v(" "),e("p",[a._v("下一节"),e("RouterLink",{attrs:{to:"/pages/git/test22.html"}},[a._v("操作标签")])],1)])}),[],!1,null,null,null);t.default=n.exports}}]);